/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as LibraryIndexImport } from './routes/library/index'
import { Route as AccountIndexImport } from './routes/account/index'
import { Route as AccountRegisterIndexImport } from './routes/account/register/index'
import { Route as AccountLoginIndexImport } from './routes/account/login/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LibraryIndexRoute = LibraryIndexImport.update({
  id: '/library/',
  path: '/library/',
  getParentRoute: () => rootRoute,
} as any)

const AccountIndexRoute = AccountIndexImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => rootRoute,
} as any)

const AccountRegisterIndexRoute = AccountRegisterIndexImport.update({
  id: '/account/register/',
  path: '/account/register/',
  getParentRoute: () => rootRoute,
} as any)

const AccountLoginIndexRoute = AccountLoginIndexImport.update({
  id: '/account/login/',
  path: '/account/login/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/account/': {
      id: '/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountIndexImport
      parentRoute: typeof rootRoute
    }
    '/library/': {
      id: '/library/'
      path: '/library'
      fullPath: '/library'
      preLoaderRoute: typeof LibraryIndexImport
      parentRoute: typeof rootRoute
    }
    '/account/login/': {
      id: '/account/login/'
      path: '/account/login'
      fullPath: '/account/login'
      preLoaderRoute: typeof AccountLoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/account/register/': {
      id: '/account/register/'
      path: '/account/register'
      fullPath: '/account/register'
      preLoaderRoute: typeof AccountRegisterIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/account': typeof AccountIndexRoute
  '/library': typeof LibraryIndexRoute
  '/account/login': typeof AccountLoginIndexRoute
  '/account/register': typeof AccountRegisterIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/account': typeof AccountIndexRoute
  '/library': typeof LibraryIndexRoute
  '/account/login': typeof AccountLoginIndexRoute
  '/account/register': typeof AccountRegisterIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/account/': typeof AccountIndexRoute
  '/library/': typeof LibraryIndexRoute
  '/account/login/': typeof AccountLoginIndexRoute
  '/account/register/': typeof AccountRegisterIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/account'
    | '/library'
    | '/account/login'
    | '/account/register'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/account' | '/library' | '/account/login' | '/account/register'
  id:
    | '__root__'
    | '/'
    | '/account/'
    | '/library/'
    | '/account/login/'
    | '/account/register/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccountIndexRoute: typeof AccountIndexRoute
  LibraryIndexRoute: typeof LibraryIndexRoute
  AccountLoginIndexRoute: typeof AccountLoginIndexRoute
  AccountRegisterIndexRoute: typeof AccountRegisterIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccountIndexRoute: AccountIndexRoute,
  LibraryIndexRoute: LibraryIndexRoute,
  AccountLoginIndexRoute: AccountLoginIndexRoute,
  AccountRegisterIndexRoute: AccountRegisterIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/account/",
        "/library/",
        "/account/login/",
        "/account/register/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/account/": {
      "filePath": "account/index.tsx"
    },
    "/library/": {
      "filePath": "library/index.tsx"
    },
    "/account/login/": {
      "filePath": "account/login/index.tsx"
    },
    "/account/register/": {
      "filePath": "account/register/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
